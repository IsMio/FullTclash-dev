name: Release FullTClash libs
on:
  push:
    tags:
      - v*
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  pull_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone FullTclash repository
        run: git clone --depth=1 --branch=dev https://github.com/AirportR/FullTclash

      - name: Copy files
        run: cp -r FullTclash/* .

      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Pull dev branch from AirportR/FullTclash"
          github_token: ${{ secrets.GITHUB_TOKEN }}
  linuxbuild386:
    name: build 386core version
    needs: pull_and_push
    runs-on: ubuntu-latest
    container: docker.io/ubuntu:18.04
    steps:
      - name: build linux 386 version
        run: |
          apt-get update
          apt install -y sudo curl wget unzip ca-certificates build-essential gcc-multilib git
          update-ca-certificates
  
      - uses: actions/checkout@v3.5.2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: gomod1
        run: go mod init myclash
      - name: gomod2
        run: go mod tidy
      - name: Build 386
        run: CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -buildmode=c-shared -o ./output/fulltclash-linux-386 ./libs/fulltclash.go
      - name: Upload  Asset 
        uses: actions/upload-artifact@v2
        with:
          name: fulltclash-386
          path: ./output/*
          if-no-files-found: error
        
  linuxbuildamd64:
    name: build amd64core version
    needs: pull_and_push
    runs-on: ubuntu-latest
    container: docker.io/ubuntu:18.04
    steps:
      - name: build linux amd64 version
        run: |
          apt-get update
          apt install -y sudo curl wget unzip ca-certificates build-essential gcc-multilib git
          update-ca-certificates
      - uses: actions/checkout@v3.5.2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: gomod1
        run: go mod init myclash
      - name: gomod2
        run: go mod tidy
      - name: Build amd64
        run:  CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ./output/fulltclash-linux-amd64 ./libs/fulltclash.go
      - name: Upload  Asset 
        uses: actions/upload-artifact@v2
        with:
          name: fulltclash-amd64
          path: ./output/*
          if-no-files-found: error
  linuxbuildarm64:
    name: build arm64core version
    needs: pull_and_push
    runs-on: ubuntu-latest
    container: docker.io/ubuntu:18.04
    steps:
      - name: build linux arm64 version
        run: |
          apt-get update
          apt install -y sudo curl wget unzip ca-certificates build-essential gcc-aarch64-linux-gnu git
          update-ca-certificates
      - uses: actions/checkout@v3.5.2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: gomod1
        run: go mod init myclash
      - name: gomod2
        run: go mod tidy
      - name: Build arm64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o ./output/fulltclash-linux-arm64 ./libs/fulltclash.go
      - name: Upload  Asset 
        uses: actions/upload-artifact@v2
        with:
          name: fulltclash-arm64
          path: ./output/*
          if-no-files-found: error
  linuxbuilds930x:
    name: build s390xcore version
    needs: pull_and_push
    runs-on: ubuntu-latest
    container: docker.io/ubuntu:18.04
    steps:
      - name: build linux s390x version
        run: |
          apt-get update
          apt install -y sudo curl wget unzip ca-certificates build-essential gcc-s390x-linux-gnu git
          update-ca-certificates
      - uses: actions/checkout@v3.5.2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: gomod1
        run: go mod init myclash
      - name: gomod2
        run: go mod tidy
      - name: Build s390x
        run: CGO_ENABLED=1 GOOS=linux GOARCH=s390x CC=s390x-linux-gnu-gcc go build -o ./output/fulltclash-linux-s386x ./libs/fulltclash.go
      - name: Upload  Asset 
        uses: actions/upload-artifact@v2
        with:
          name: fulltclash-s390x
          path: ./output/*
          if-no-files-found: error
  Windowsmacbuild:
    name: Windowsmacbuild
    needs: pull_and_push
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, windows-latest]
    steps:
      - name: build 
        run: |
          git clone https://github.com/AirportR/FullTclash.git -b dev
          cd FullTclash 
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - name: gomod1
        run: go mod init myclash
      - name: gomod2
        run: go mod tidy
      - name: Build
        run: go build -buildmode=c-shared -o ./output/fulltclash-${{ matrix.os }}-amd64 ./libs/fulltclash.go
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: fulltclash-${{ matrix.os }}-amd64
          path: ./output/*
          if-no-files-found: error
